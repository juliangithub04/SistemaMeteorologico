[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\julia\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\julia\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.4 (Oracle Corporation Java 23.0.1)
[debug] Load.defaultLoad until apply took 136.044ms
[debug]           Load.loadUnit: plugins took 110.0785ms
[debug]           Load.loadUnit: defsScala took 1.2741ms
[debug] [Loading] Scanning directory C:\Users\julia\Downloads\Proyecto\project
[debug]             Load.loadUnit: mkEval took 10.9618ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\julia\Downloads\Proyecto\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 30.3537 ms
[info] loading settings for project proyecto-build from idea.sbt ...
[debug]               Load.resolveProject(proyecto-build) took 113.1872ms
[debug]             Load.loadTransitive: finalizeProject(Project(id proyecto-build, base: C:\Users\julia\Downloads\Proyecto\project, plugins: List(<none>))) took 166.395ms
[debug] [Loading] Done in C:\Users\julia\Downloads\Proyecto\project, returning: (proyecto-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 5985.254ms
[debug]           Load.loadUnit: cleanEvalClasses took 25.3845ms
[debug]         Load.loadUnit(file:/C:/Users/julia/Downloads/Proyecto/project/, ...) took 6137.0692ms
[debug]       Load.apply: load took 6427.9966ms
[debug]       Load.apply: resolveProjects took 8.3123ms
[debug]       Load.apply: finalTransforms took 83.8819ms
[debug]       Load.apply: config.delegates took 16.0937ms
[debug]       Load.apply: Def.make(settings)... took 696.5823ms
[debug]       Load.apply: structureIndex took 162.7164ms
[debug]       Load.apply: mkStreams took 3.47ms
[info] loading project definition from C:\Users\julia\Downloads\Proyecto\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 10076.1372ms
[debug]     Load.loadUnit: defsScala took 0.003ms
[debug] [Loading] Scanning directory C:\Users\julia\Downloads\Proyecto
[debug]       Load.loadUnit: mkEval took 0.6314ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 3.9804 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 47.4157ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\julia\Downloads\Proyecto, plugins: List(<none>))) took 53.2203ms
[debug] [Loading] Done in C:\Users\julia\Downloads\Proyecto, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 2360.1036ms
[debug]     Load.loadUnit: cleanEvalClasses took 41.6918ms
[debug]   Load.loadUnit(file:/C:/Users/julia/Downloads/Proyecto/, ...) took 12481.3329ms
[debug] Load.apply: load took 12499.4911ms
[debug] Load.apply: resolveProjects took 0.1757ms
[debug] Load.apply: finalTransforms took 64.0963ms
[debug] Load.apply: config.delegates took 0.6981ms
[debug] Load.apply: Def.make(settings)... took 100.0789ms
[debug] Load.apply: structureIndex took 58.2731ms
[debug] Load.apply: mkStreams took 0.0032ms
[info] set current project to SistemaMeteorologico (in build file:/C:/Users/julia/Downloads/Proyecto/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(idea-shell, None, None)
